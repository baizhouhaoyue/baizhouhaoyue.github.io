<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SSH服务安装</title>
    <url>/2023/08/16/SSH%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="第一章-SSH服务"><a href="#第一章-SSH服务" class="headerlink" title="第一章    SSH服务"></a>第一章    SSH服务</h1><p><strong>SSH服务功能：实现远程连接，及文件传输服务。</strong></p>
<p><u></u></p>
<h1 id="第二章换源操作："><a href="#第二章换源操作：" class="headerlink" title="第二章	换源操作："></a>第二章	换源操作：</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/SSH%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816152039215.png"
                      alt="image-20230816152039215"
                ></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/08/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>ubuntu22.04的安装</title>
    <url>/2023/08/16/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="第一章-开始软件"><a href="#第一章-开始软件" class="headerlink" title="第一章 开始软件"></a>第一章 开始软件</h1><p>虚拟机工具VMware：</p>
<p><a class="link"   href="https://customerconnect.vmware.com/cn/downloads/#all_products" >所有下载 (vmware.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>VMtool：</p>
<p><a class="link"   href="https://customerconnect.vmware.com/cn/downloads/info/slug/datacenter_cloud_infrastructure/vmware_tools/12_x" >下载 VMware Tools - VMware Customer Connect <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>ubuntu所需镜像：</p>
<p><a class="link"   href="https://mirrors.aliyun.com/ubuntu-releases/22.04/" >ubuntu-releases-22.04安装包下载_开源镜像站-阿里云 (aliyun.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/a066d04eef0f40f0b085c721b229bf0a.png"
                      alt="a066d04eef0f40f0b085c721b229bf0a"
                ></p>
<h1 id="第二章-vmware新建ubuntu"><a href="#第二章-vmware新建ubuntu" class="headerlink" title="第二章   vmware新建ubuntu"></a>第二章   vmware新建ubuntu</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816094803019.png"
                      alt="image-20230816094803019"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816094808162.png"
                      alt="image-20230816094808162"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816094816344.png"
                      alt="image-20230816094816344"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816095606500.png"
                      alt="image-20230816095606500"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816095612327-1692166364806.png"
                      alt="image-20230816095612327"
                ></p>
<h1 id="第三章-对ubuntu16进行硬件配置"><a href="#第三章-对ubuntu16进行硬件配置" class="headerlink" title="第三章     对ubuntu16进行硬件配置"></a>第三章     对ubuntu16进行硬件配置</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816095700054-1692166380640.png"
                      alt="image-20230816095700054"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816095830906-1692166386417.png"
                      alt="image-20230816095830906"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816100029825-1692166394987.png"
                      alt="image-20230816100029825"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816100216999.png"
                      alt="image-20230816100216999"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816100423202.png"
                      alt="image-20230816100423202"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816100446951.png"
                      alt="image-20230816100446951"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816101236635.png"
                      alt="image-20230816101236635"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816101433412.png"
                      alt="image-20230816101433412"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816101910424-1692166437093.png"
                      alt="image-20230816101910424"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816101910424-1692166445930.png"
                      alt="image-20230816101910424"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816102123509-1692166451322.png"
                      alt="image-20230816102123509"
                ></p>
<p>下载完后安装完毕</p>
<h1 id="第四章-vmtool工具安装"><a href="#第四章-vmtool工具安装" class="headerlink" title="第四章  vmtool工具安装"></a>第四章  vmtool工具安装</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816143153587.png"
                      alt="image-20230816143153587"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816143426805.png"
                      alt="image-20230816143426805"
                ></p>
<p>桌面鼠标右键新建文件夹</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816143935974.png"
                      alt="image-20230816143935974"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816143903174.png"
                      alt="image-20230816143903174"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816144146568.png"
                      alt="image-20230816144146568"
                ></p>
<p>输入以下指令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf  VMware Tools-10.0.5-3228253.tar.gz</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816144226310.png"
                      alt="image-20230816144226310"
                ></p>
<p>进入解压文件夹</p>
<p>输入以下指令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> vmware-tools-distrib/</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816144805755.png"
                      alt="image-20230816144805755"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816145129812.png"
                      alt="image-20230816145129812"
                ></p>
<p>输入以下指令安装</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./vmware-intall.pl</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816145318287.png"
                      alt="image-20230816145318287"
                ></p>
<p>有问题就一直回车，当出现yes或no时，一直输入yes</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/ubuntu22-04%E7%9A%84%E5%AE%89%E8%A3%85/$%7Bfiilename%7D/image-20230816145659470.png"
                      alt="image-20230816145659470"
                ></p>
<p>出现时表示安装成功</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo博客搭建和使用教程(Windows)</title>
    <url>/2023/08/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-Windows/</url>
    <content><![CDATA[<p><strong>提前声明：</strong></p>
<p>本文借鉴codingpath文章（<a class="link"   href="https://zhuanlan.zhihu.com/p/547520780" >2022 Hexo 博客搭建和使用教程(Windows) - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>），后根据本人理解重新编写。</p>
<h1 id="Hexo博客"><a href="#Hexo博客" class="headerlink" title="Hexo博客"></a>Hexo博客</h1><p><strong>Hexo介绍：</strong></p>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown]<a class="link"   href="https://daringfireball.net/projects/markdown/" >Daring Fireball: Markdown <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>Hexo 官方中文网站: <a href="%5BHexo%5D(https://hexo.io/zh-cn/index.html)">Hexo</a></p>
<h2 id="第一章-前期准备"><a href="#第一章-前期准备" class="headerlink" title="第一章 前期准备"></a><strong>第一章 前期准备</strong></h2><h3 id="1-1-安装前所需环境介绍"><a href="#1-1-安装前所需环境介绍" class="headerlink" title="1.1 安装前所需环境介绍"></a><strong>1.1 安装前所需环境介绍</strong></h3><p>安装 Hexo 之前，需要确保您的 PC 中已经安装以下工具:</p>
<ul>
<li>Node.js [地址: [Node.js (nodejs.org)](<a class="link"   href="https://nodejs.org/en" >Node.js (nodejs.org) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)]</li>
<li>Git [地址: [Git (git-scm.com)](<a class="link"   href="https://git-scm.com/" >Git (git-scm.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)]</li>
</ul>
<p>如果您的电脑已经具备所需工具，那么您可以直接进入第二章开始安装 Hexo 了。</p>
<p>如果您还未安装这两款工具，那么请按照以下步骤进行安装。</p>
<h3 id="1-2-安装-Git"><a href="#1-2-安装-Git" class="headerlink" title="1.2 安装 Git"></a><strong>1.2 安装 Git</strong></h3><ul>
<li>官方下载地址: [Git - Downloading Package (git-scm.com)](<a class="link"   href="https://git-scm.com/download/win" >Git - Downloading Package (git-scm.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>安装与使用: 详情见 Git 笔记(尚未写出)</li>
<li>注意事项: 建议选择 64-bit Git for Windows Setup，并且安装时要勾选 <strong>Add to PATH</strong> 选项</li>
<li><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814234245181.png"
                      alt="image-20230814234245181"
                ></li>
</ul>
<p>win + R 在命令行输入cmd进入终端模式，输入下面指令，当显示版本则安装成功</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git -v</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814234451029.png"
                      alt="image-20230814234451029"
                ></p>
<h3 id="1-3-安装-Node-js"><a href="#1-3-安装-Node-js" class="headerlink" title="1.3 安装 Node.js"></a><strong>1.3 安装 Node.js</strong></h3><ul>
<li>官方下载地址: <a class="link"   href="https://link.zhihu.com/?target=https://nodejs.org/en/" >Node.js (nodejs.org) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>安装与使用: 详情见 Node 笔记(尚未写出)</li>
<li>注意事项: 使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/image-20230814234403808.png"
                      alt="image-20230814234403808"
                ></p>
<p>win + R 在命令行输入cmd进入终端模式，输入下面指令，当显示版本则安装成功</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814234810874.png"
                      alt="image-20230814234810874"
                ></p>
<p>至此，您已经完成了安装 Hexo 所需的所有额外环境，接下来就可以安装 Hexo 了。</p>
<h2 id="第二章-安装-Hexo"><a href="#第二章-安装-Hexo" class="headerlink" title="第二章 安装 Hexo"></a><strong>第二章 安装 Hexo</strong></h2><h3 id="2-1-安装-cnpm"><a href="#2-1-安装-cnpm" class="headerlink" title="2.1 安装 cnpm"></a><strong>2.1 安装 cnpm</strong></h3><p>当您安装 Node.js 之后，便可以在命令行中通过 node install 命令安装您想要的程序了。但本文推荐使用 cnpm 安装 Hexo，所以需要先通过 npm install 安装 cnpm。</p>
<ul>
<li><p>命令: <code>npm install -g cnpm --registry==https://registry.npm.taobao.org</code><br>说明: -g 表示进行全局安装，–registry&#x3D;&#x3D;<a class="link"   href="https://link.zhihu.com/?target=https://registry.npm.taobao.org/" >https://registry.npm.taobao.org <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 表示使用淘宝镜像安装 cnpm</p>
</li>
<li><p>安装后验证: 在 cmd 中输入命令 cnpm -v, 可查看 cnpm 版本</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814235223236.png"
                      alt="image-20230814235223236"
                ></p>
</li>
</ul>
<h3 id="2-2-安装-Hexo"><a href="#2-2-安装-Hexo" class="headerlink" title="2.2 安装 Hexo"></a><strong>2.2 安装 Hexo</strong></h3><ul>
<li>命令: <code>cnpm install -g hexo-cli</code><br>说明: -g 表示全局安装，hexo-cli 为所安装的包</li>
<li>安装后验证: 在 cmd 中输入命令 hexo -v, 可查看 hexo 版本</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814235304068.png"
                      alt="image-20230814235304068"
                ></p>
<h3 id="2-3-注意事项"><a href="#2-3-注意事项" class="headerlink" title="2.3 注意事项"></a><strong>2.3 注意事项</strong></h3><p>建议永远安装最新版本的 Hexo，以及 [推荐的 Node.js 版本](<a class="link"   href="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90" >文档 | Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)。</p>
<table>
<thead>
<tr>
<th>Hexo 版本</th>
<th>最低兼容 Node.js 版本</th>
</tr>
</thead>
<tbody><tr>
<td>6.0+</td>
<td>12.13.0</td>
</tr>
<tr>
<td>5.0+</td>
<td>10.13.0</td>
</tr>
<tr>
<td>4.1 - 4.2</td>
<td>8.10</td>
</tr>
<tr>
<td>4.0</td>
<td>8.6</td>
</tr>
<tr>
<td>3.3 - 3.9</td>
<td>6.9</td>
</tr>
<tr>
<td>3.2 - 3.3</td>
<td>0.12</td>
</tr>
<tr>
<td>3.0 - 3.1</td>
<td>0.10 or iojs</td>
</tr>
<tr>
<td>0.0.1 - 2.8</td>
<td>0.10</td>
</tr>
</tbody></table>
<hr>
<p>至此，您已成成功安装了 Hexo，接下来进入 Github 的配置吧!</p>
<h2 id="第三章-配置-Github"><a href="#第三章-配置-Github" class="headerlink" title="第三章 配置 Github"></a><strong>第三章 配置 Github</strong></h2><p>如果您还没有 Gihub 账户，请注册一个 Github 账户吧!</p>
<h3 id="3-1-在-Github-上创建仓库"><a href="#3-1-在-Github-上创建仓库" class="headerlink" title="3.1 在 Github 上创建仓库"></a><strong>3.1 在 Github 上创建仓库</strong></h3><ul>
<li>新建一个名为: <a class="link"   href="https://link.zhihu.com/?target=http://username.github.io" >http://username.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的仓库(username 为您的 Github 用户名)</li>
<li>比如，如果您的 github 用户名是 test，那么您就新建名为 <a class="link"   href="https://link.zhihu.com/?target=http://test.github.io" >http://test.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的仓库（必须是您的用户名，其它名称无效），将来你的网站访问地址就是 <a class="link"   href="https://link.zhihu.com/?target=https://test.github.io/" >https://test.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 了。由此可见，每一个 github 账户最多只能创建一个这样可以直接使用域名访问的仓库。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230814235852254.png"
                      alt="&lt;!--&lt;!--image-20230814235852254--&gt;--&gt;"
                ></p>
<h3 id="3-2-配置-SSH-免密登录"><a href="#3-2-配置-SSH-免密登录" class="headerlink" title="3.2 配置 SSH 免密登录"></a><strong>3.2 配置 SSH 免密登录</strong></h3><p>为什么要配置这个呢？因为您提交代码肯定要拥有您的 github 权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用 ssh key 来解决本地和服务器的连接问题。</p>
<p><strong>注:</strong> 如果您已经配置过 SSH，可跳过此步骤</p>
<p><strong>步骤:</strong></p>
<p>1、首先打开电脑文件夹，找到 C:\Users\您的用户名\ .ssh文件夹并删除(如果没有，则直接进入第二步)</p>
<p>2、在 C:\Users\您的用户名 文件夹下右键打开 Git Bash Here 输入命令: <code>ssh-keygen -t rsa -C &quot;你的github登录邮箱&quot;</code> 生成.ssh秘钥，输入后连敲三次回车，出现下图情况代表成功</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000353188.png"
                      alt="image-20230815000353188"
                ></p>
<p>3、生成了一个新的 C:\Users\您的用户名\ .ssh文件夹，打开这个文件夹，找到 .ssh\id_rsa.pub 文件，记事本打开并复制里面的内容</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815001007080.png"
                      alt="image-20230815001007080"
                ></p>
<p>4、打开您的 github 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，把复制的内容粘贴进去，title 随便填，保存即可，我们的公钥就添加成功了，设置好如下图:</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000521134.png"
                      alt="image-20230815000521134"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000545361.png"
                      alt="image-20230815000545361"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000615104.png"
                      alt="image-20230815000615104"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000711127.png"
                      alt="image-20230815000711127"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815000812045.png"
                      alt="image-20230815000812045"
                ></p>
<p>5、检测是否设置成功:</p>
<p>输入命令: <code>ssh -T git@github.com</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815001156227.png"
                      alt="image-20230815001156227"
                ></p>
<p>看到以上信息说明 SSH 已配置成功!</p>
<p>如果出现提示则选择yes知道成功；</p>
<p>6、此外您还需要如下配置:</p>
<p>命令: <code>git config --global user.name &quot;您的 Github username&quot;</code> &#x2F;&#x2F; 注意是 username, 而非昵称</p>
<p>命令: <code>git config --global user.email &quot;xxx@qq.com&quot;</code> &#x2F;&#x2F; 填写您的 github 注册邮箱</p>
<p><u></u></p>
<p>至此，您已经成功配置好了 Github，接下来开始搭建个人博客吧!</p>
<h2 id="第四章-使用-Hexo-搭建博客"><a href="#第四章-使用-Hexo-搭建博客" class="headerlink" title="第四章 使用 Hexo 搭建博客"></a><strong>第四章 使用 Hexo 搭建博客</strong></h2><h2 id="Hexo-的一些命令"><a href="#Hexo-的一些命令" class="headerlink" title="Hexo 的一些命令"></a>Hexo 的一些命令</h2><ul>
<li>生成静态文件：<code>hexo g</code>；</li>
<li>清空静态文件：<code>hexo cl</code>；</li>
<li>在本地运行：<code>hexo s</code>；</li>
<li>部署到网站：<code>hexo d</code>；</li>
<li>生成静态文件并部署到网站：<code>hexo d -g</code> 或 <code>hexo g -d</code>；</li>
<li>创建新文章：<code>hexo new &lt;file&gt;</code>。</li>
</ul>
<h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a><strong>4.1 初始化</strong></h3><p>1、在电脑的某个磁盘或路径新建一个名为 hexo 的文件夹(名字可以随便取)，比如我的是 D:\hexo，由于这个文件夹将来就作为您存放代码的地方，所以最好不要随便放</p>
<p>2、在 D:\hexo 文件夹下右键打开 Git Bash Here，输入命令: <code>hexo init</code> 进行初始化</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815001538223.png"
                      alt="image-20230815001538223"
                ></p>
<p>hexo 会自动下载一些文件到这个目录，包括 node_modules，目录结构如下图:</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815001610824.png"
                      alt="image-20230815001610824"
                ></p>
<p>3、执行命令: <code>hexo g</code> 会在 public 文件夹下生成相关的 html 文件，这些文件将来需要提交到 Github 上</p>
<p>4、执行命令: <code>hexo s</code> 可以开启本地预览服务，打开浏览器访问 <a class="link"   href="https://link.zhihu.com/?target=http://localhost:4000/" >http://localhost:4000 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 即可看到博客内容</p>
<h3 id="4-2-将博客部署到-Github"><a href="#4-2-将博客部署到-Github" class="headerlink" title="4.2 将博客部署到 Github"></a><strong>4.2 将博客部署到 Github</strong></h3><p>1、在 D:\hexo 目录下安装 hexo-deployer-git 插件</p>
<ul>
<li>命令: <code>npm install hexo-deployer-git --save</code></li>
</ul>
<p>2、编辑 D:\hexo 目录下的 _config.yml 文件，在文件末尾添加如下内容:</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815002403780.png"
                      alt="image-20230815002403780"
                ></p>
<p>注意: 其中 repository 中的内容即为 github 个人主页链接地址</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815103422386.png"
                      alt="image-20230815103422386"
                ></p>
<p>3、在 D:\hexo 目录下，输入命令: <code>hexo d</code> 将本地 blog 推送到 github 远程仓库，也可能需要输入 username &amp; pwd</p>
<p>推送成功后，即可通过<a class="link"   href="https://baizhouhaoyue.github.io/%E8%AE%BF%E9%97%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%86" >https://baizhouhaoyue.github.io/访问个人博客了 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>!</p>
<h2 id="第五章-更换主题"><a href="#第五章-更换主题" class="headerlink" title="第五章 更换主题"></a><strong>第五章 更换主题</strong></h2><p>在 D:\hexo 目录下有一个 themes 文件夹，该文件夹下存放着 hexo 所使用的主题</p>
<h3 id="5-1-搜索主题"><a href="#5-1-搜索主题" class="headerlink" title="5.1 搜索主题"></a><strong>5.1 搜索主题</strong></h3><ul>
<li>hexo 官方提供了很多主题供我们使用，地址: <a class="link"   href="https://hexo.io/themes/" >Themes | Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, 选择喜欢的主题并点击即可跳转至 github</li>
<li>您可以在 github 中直接搜索 hexo 主题</li>
</ul>
<h3 id="5-2-下载主题"><a href="#5-2-下载主题" class="headerlink" title="5.2 下载主题"></a><strong>5.2 下载主题</strong></h3><p>方法一：</p>
<p>1、在 D:\hexo 目录下右键 Git Bash Here</p>
<p>2、执行命令: <code>git clone 主题http链接 themes/主题名称</code> 将主题下载至 themes 文件夹下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815104851562.png"
                      alt="image-20230815104851562"
                ></p>
<ul>
<li>可以在该文件夹下查看是否下载成功</li>
<li><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815104919031.png"
                      alt="image-20230815104919031"
                ></li>
</ul>
<p>方法二：</p>
<p>1、在 D:\hexo 目录下右键 Git Bash Here</p>
<p>2、执行命令: npm install hexo-theme-主题名@latest 将主题下载至 themes 文件夹下(根据主题要求文档)</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815105237283.png"
                      alt="image-20230815105237283"
                ></p>
<h3 id="5-3-使用主题"><a href="#5-3-使用主题" class="headerlink" title="5.3 使用主题"></a><strong>5.3 使用主题</strong></h3><p>​    	方法一：</p>
<ul>
<li><p>打开 D:\hexo 目录下的 _config.yml 文件，在里面找到 theme: landscape改为theme: yilia-plus(yilia-plus为我们要使用的主题名)，然后执行 <code>hexo clean</code> 先删除旧的 html 文件，再执行 <code>hexo g</code> 重新生成，再执行 <code>hexo d</code> 推送到远程仓库</p>
</li>
<li><p>在浏览器输入相应域名，发现主题已更换</p>
</li>
<li><p>注意: 可能需要等一段时间刷新才更换 please be patient</p>
<p>方法二：</p>
<p>在 Hexo 根目录的 <code>_config.yml</code> 文件中，将 <code>theme</code> 值修改为   主题名  。</p>
<p>_config.yml</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: redefine</span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="5-4-修改主题内容"><a href="#5-4-修改主题内容" class="headerlink" title="5.4 修改主题内容"></a><strong>5.4 修改主题内容</strong></h3><p>您可以在 themes&#x2F;yilia-plus 文件夹中查看该主题的内容，并可编辑该文件夹中的 _config.yml 文件修改主题样式</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815105641322.png"
                      alt="image-20230815105641322"
                ></p>
<p>注意: 记得编辑根目录下的 _config.yml 文件，将信息修改为自己的</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815105804677.png"
                      alt="image-20230815105804677"
                ></p>
<h2 id="第六章-使用-Typora-编写博客"><a href="#第六章-使用-Typora-编写博客" class="headerlink" title="第六章 使用 Typora 编写博客"></a><strong>第六章 使用 Typora 编写博客</strong></h2><h3 id="6-1-Typora-介绍"><a href="#6-1-Typora-介绍" class="headerlink" title="6.1 Typora 介绍"></a><strong>6.1 Typora 介绍</strong></h3><p>Typora 是一款轻便简洁的 Markdown 编辑器，支持即时渲染技术，这也是与其他 Markdown 编辑器最显著的区别。即时渲染使得你写Markdown 就像是写 Word 文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p>
<p>优点:</p>
<ul>
<li><strong>简洁美观</strong></li>
<li><strong>实时预览</strong></li>
<li><strong>扩展语法</strong></li>
<li><strong>跨平台</strong></li>
</ul>
<h3 id="6-2-安装-Typora"><a href="#6-2-安装-Typora" class="headerlink" title="6.2 安装 Typora"></a><strong>6.2 安装 Typora</strong></h3><p>官网: <a class="link"   href="https://typoraio.cn/" >Typora 官方中文站 (typoraio.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 遗憾收费了。</p>
<p>为此再次感谢<strong>codingpath大佬</strong><a class="link"   href="https://www.zhihu.com/people/nu-li-nu-li-zai-nu-li-x-80-72" > codingpath - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>提供的免费资源<a class="link"   href="https://www.aliyundrive.com/s/1SQzr6JXeR8" >阿里云盘分享 (aliyundrive.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="6-3-写博客"><a href="#6-3-写博客" class="headerlink" title="6.3 写博客"></a><strong>6.3 写博客</strong></h3><p>1、在 D:\hexo 目录下，通过输入命令: <code>hexo new &quot;文章 title&quot;</code> 会在 &#x2F;source 文件夹下生成对应文章的 .md 文件，然后就可以通过 Typora 打开此文件编写文章并保存了</p>
<p>2、当您写完该篇文章后，依次输入以下命令:</p>
<p><code>hexo clean</code> 删除 public 文件夹，即删除旧的博客文章</p>
<p><code>hexo g</code> 生成 public 文件夹，即生成新的博客文章相关 html 文件</p>
<p><code>hexo d</code> 将博客推送到 github</p>
<h3 id="6-4-向-Hexo-博客中插入图片"><a href="#6-4-向-Hexo-博客中插入图片" class="headerlink" title="6.4 向 Hexo 博客中插入图片"></a><strong>6.4 向 Hexo 博客中插入图片</strong></h3><p>Hexo 有多种图片插入方式，可以将图片存放在本地引用或者将图片放在 CDN 上引用。</p>
<p>1、本地引用–绝对路径</p>
<p>当 Hexo 项目中只用到少量图片时，可以将图片统一放在 source&#x2F;images 文件夹中，通过 markdown 语法访问它们。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815110743723.png"
                      alt="image-20230815110743723"
                ></p>
<p>设置Typora的图片默认路径</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815110915289.png"
                      alt="image-20230815110915289"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815111430665.png"
                      alt="image-20230815111430665"
                ></p>
<p>按照如图配置，如果你用的Hexo写博客，复制这个即可<code>../../source/imgs/$&#123;fiilename&#125;</code><br>它的意思是将文中的照片复制一份到<code>imgs</code>里的<code>$&#123;fiilename&#125;</code>文件里<br>如果没有用Hexo，按照这个思路设置对路径即可</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815111532830.png"
                      alt="image-20230815111532830"
                ></p>
<p>2、本地引用–相对路径</p>
<p>图片除了可以放在统一的 images 文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置 _config.yml 来生成。</p>
<p>打开项目根目录中的 *_config.yml 文件，将 _config.yml文件中的配置项 post_asset_folder 设为 true 后，执行命令 <code>hexo new &quot;post_name&quot;</code>，在 source&#x2F;*posts 中会生成文章 post_name.md 和同名文件夹 post_name。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/imgs/$%7Bfiilename%7D/image-20230815111657186.png"
                      alt="image-20230815111657186"
                ></p>
<p>将图片资源放在 post_name 文件夹中，文章就可以使用相对路径引用图片资源了。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure></div>

<p>但是使用这种引用方式，图片只能在文章中显示，但无法在首页中正常显示。</p>
<p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法(<strong>推荐使用这种引用方法</strong>)。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img image.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure></div>

<p>3、CDN 引用(<strong>不推荐</strong>)</p>
<p>除了在本地存储图片，还可以将图片上传到一些免费的 CDN 服务中。</p>
]]></content>
  </entry>
</search>
